{
  "title": "CodeMelted - Developer Feed",
  "description": "'Write once, run anywhere (WORA)' was the famous slogan made by Sun Microsystems in 1995.  At the time, this technology allowed for easy full stack engineering allowing you to target dedicated workstations and on premise servers. So long as a Java Runtime Environment existed, you could run your code. Java was unable to keep to their slogan as web browsers became more advanced, mobile devices became ubiquitous, and companies no longer required dedicated servers. Enter the Progressive Web Applications (PWA). A technology stack that utilizes the web browser as the ultimate runtime environment. You can run your application so long as a web browser is on the device. This is the same mantra and spirit of the original Java slogan. The goal of this project is to aid software engineers in building and delivering on PWAs. It will implement a series of identified use cases across the different identified SDK technologies to support all aspects of a PWA. The later sections of this document will expand on this philosophy.",
  "feed_url": "https://developer.codemelted.com/feed.json",
  "favicon": "https://developer.codemelted.com/favicon.ico",
  "home_page_url": "https://developer.codemelted.com",
  "version": "https://jsonfeed.org/version/1.1",
  "language": "en",
  "authors": [
    {
      "name": "Mark Shaffer",
      "url": "https://github.com/codemelted",
      "avatar": "https://developer.codemelted.com/CodeMelted/assets/images/me.jpg"
    }
  ],
  "items": [
    {
      "id": "https://developer.codemelted.com/codemelted_embedded",
      "title": "CodeMelted - Embedded Module",
      "image": "https://developer.codemelted.com/assets/images/icons/c.png",
      "content_text": "Welcome to the **CodeMelted Embedded Module** project. This project aims to implement the use cases from the **CodeMelted Developer** design allowing for a need of speed for an application. It will be developed with a C-style header file for easy integration into other projects. The implementation file will be in C++ to take full advantage of the Standard Template Library to reduce errors. A cmake file will be provided to allow for easy integration into your C/C++ application. This project will target Linux, Mac OS, and Windows operating systems. Later development will attempt to target Web Assembly.",
      "date_published": "2023-12-23",
      "date_modified": null,
      "tags": [
        "C/C++",
        "WASM",
        "Linux",
        "Mac OS",
        "Windows",
        "Raspberry Pi",
        "CodeMelted - Embedded Module"
      ]
    },
    {
      "id": "https://developer.codemelted.com/codemelted_fullstack",
      "title": "CodeMelted - Fullstack Module",
      "image": "https://developer.codemelted.com/assets/images/icons/javascript.png",
      "content_text": "Welcome to the **CodeMelted Fullstack Module** project. This project aims to give a common fullstack solution for Progressive Web Applications (PWA) utilizing the **CodeMelted Developer** design. It utilizes the <a href='https://deno.com/' target='_blank'>Deno Runtime</a> to run as your backend service. This was chosen as it has a full range of services for your backend if you choose to utilize it. You can also take your backend and host it on a different platform. This allows you to not be locked into a vendor for your backend. Deno was also chosen because it implements the <a href='https://developer.mozilla.org/en-US/docs/Web/API' target='_blank'>Browser Web APIs</a>. This allows the module to implement backend and web frontend common code developing a more complete solution. Lastly, Deno provides the use of TypeScript natively out of the box. So you are able to utilize both JavaScript / TypeScript for your solution an roll with any build system.",
      "date_published": "2023-12-23",
      "date_modified": null,
      "tags": [
        "JavaScript",
        "TypeScript",
        "Deno",
        "Web APIs",
        "Module",
        "ES6",
        "HTML5",
        "CSS3",
        "CodeMelted - Fullstack Module"
      ]
    },
    {
      "id": "https://developer.codemelted.com/codemelted_pi",
      "title": "Codemelted - Raspberry Pi",
      "image": "https://developer.codemelted.com/assets/images/icons/raspberry-pi.png",
      "content_text": "Welcome to the **CodeMelted - Raspberry Pi** project. This project aims to utilize the different **CodeMelted - Developer** modules as services on a Raspberry Pi. These services aim to allow a user to yield different configurations to utilize the Raspberry Pi. The identified services will include getting GPS coordinates, taking still frame pictures tagged with the GPS information, taking video to serve as a dashcam or webcam, provide infotainment within a vehicle, the ability to interface with the raspberry pi via the Internet, and finally, as a sky watching camera for nighttime astronomy. This document will serve as both the design of these services along with how to utilize it in these different configurations.",
      "date_published": "2023-12-23",
      "date_modified": null,
      "tags": [
        "Astronomy",
        "Dashcam",
        "Webcam",
        "Photography",
        "Vehicle Infotainment",
        "Raspberry Pi",
        "GPS",
        "Camera Module",
        "CodeMelted - Raspberry Pi",
        "C/C++",
        "Deno",
        "PowerShell",
        "pwsh",
        "Flutter",
        "CodeMelted - Terminal Module",
        "CodeMelted - Fullstack Module",
        "CodeMelted - Embedded Module",
        "CodeMelted - Web Module"
      ]
    },
    {
      "id": "https://developer.codemelted.com/codemelted_terminal",
      "title": "CodeMelted - Terminal Module",
      "image": "https://developer.codemelted.com/assets/images/icons/powershell.png",
      "content_text": "Welcome to the **CodeMelted Terminal Module** project. This project aims to implement **CodeMelted Developer** use cases with the terminal in mind. The terminal services as the place developers string together Dev OPS or automated solutions to users. With this in mind, <a href='https://github.com/PowerShell/PowerShell' target='_blank'>PowerShell Core</a> was chosen as the target platform. The reason for this is it has full support for Linux, Mac, and Windows allowing for a common scripting language regardless of the operating system. PowerShell Core has a rich set of features thanks to .NET Core. First is object streams, making it easier to connect several tasks into one cohesive set of instructions. A developer will also be able to utilize Text User Interface (TUI) to easily guide users through processes. Lastly is its built in help system providing you the ability to draft together useful help system for using your terminal commands.",
      "date_published": "2023-12-23",
      "date_modified": null,
      "tags": [
        "pwsh",
        "PowerShell Core",
        ".NET",
        "terminal",
        "Linux",
        "Mac OS",
        "Windows",
        "Text User Interface (TUI)",
        "DevOPS",
        "CodeMelted - Terminal Module"
      ]
    },
    {
      "id": "https://developer.codemelted.com/codemelted_web",
      "title": "CodeMelted - Web Module",
      "image": "https://developer.codemelted.com/assets/images/icons/flutter.png",
      "content_text": "Welcome to the **CodeMelted Web Module** project. This project aims to provide a developer with the ability to build a rich Progressive Web Application (PWA) bypassing app stores. It will utilize flutter as the SDK language. This provides a rich widget set to build Single Page Applications (SPA). It also provides full access to the <a href='https://developer.mozilla.org/en-US/docs/Web/API' target='_blank'>Browser Web APIs</a>. This combined with the Flutter SDK will allows developers to build powerful applications in less time then other web based frameworks.",
      "date_published": "2023-12-23",
      "date_modified": null,
      "tags": [
        "flutter",
        "web",
        "Single Page Application (SPA)",
        "Progressive Web Application (PWA)",
        "dart",
        "HTML5",
        "CSS3",
        "ES6",
        "CodeMelted - Web Module"
      ]
    }
  ]
}
